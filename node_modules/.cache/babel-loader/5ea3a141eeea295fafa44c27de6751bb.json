{"ast":null,"code":"var _jsxFileName = \"/Users/jeansuh/Documents/CS-Webdev/bank-of-react/src/components/Debits.js\";\n\n/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Debits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, type) => {\n      this.setState({ ...this.state,\n        [type]: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        debitList,\n        accountBalance,\n        description,\n        amount\n      } = this.state; //defines variable to update date and converts it from data object to string\n\n      var newDate = new Date().toISOString(); //defines variable to update accountBalance with\n\n      var newBalance = (Number(accountBalance) - Number(amount)).toFixed(2); //defines variable to update id with by incrementing the id of the last object\n\n      var newId = debitList[debitList.length - 1].id + 1; //updates states\n\n      this.setState({\n        debitList: [...debitList, {\n          id: newId,\n          description,\n          amount,\n          date: newDate\n        }],\n        accountBalance: newBalance\n      }, () => {\n        console.log(this.state); //updates parent component's state\n\n        this.props.updateDebits(this.state.debitList, this.state.accountBalance);\n      });\n    };\n\n    this.state = {\n      description: '',\n      //Initializes states that will be used in debitList\n      amount: '',\n      date: '',\n      debitList: this.props.debitList,\n      accountBalance: this.props.accountBalance //initializes using props\n\n    };\n  } //when the input is changed, captures it and updates states\n\n\n  // Render the list of Debit items and a form to input new Debit item\n  render() {\n    const {\n      debitList,\n      accountBalance\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Debits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: debitList.map(debit => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            listStyle: 'none'\n          },\n          children: [`${debit.description} : ${debit.amount} ${debit.date.slice(0, 10)}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Account balance : \", `${accountBalance}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.description,\n          onChange: e => {\n            this.handleChange(e, \"description\");\n          },\n          ref: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.amount,\n          onChange: e => {\n            this.handleChange(e, \"amount\");\n          },\n          ref: \"amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Debit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Debits;","map":{"version":3,"sources":["/Users/jeansuh/Documents/CS-Webdev/bank-of-react/src/components/Debits.js"],"names":["Link","Debits","Component","constructor","props","handleChange","e","type","setState","state","target","value","console","log","handleSubmit","preventDefault","debitList","accountBalance","description","amount","newDate","Date","toISOString","newBalance","Number","toFixed","newId","length","id","date","updateDebits","render","map","debit","listStyle","slice"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nclass Debits extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      description: '', //Initializes states that will be used in debitList\n      amount : '',\n      date: '',\n      debitList:this.props.debitList,\n      accountBalance:this.props.accountBalance //initializes using props\n    }\n  }\n\n  //when the input is changed, captures it and updates states\n  handleChange = (e, type) => {\n    this.setState({...this.state, [type]: e.target.value}); \n    console.log(e.target.value);\n  }\n\n  //When submitted, stores data to this state and updates parent component's state\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { debitList, accountBalance, description, amount} = this.state;\n\n    //defines variable to update date and converts it from data object to string\n    var newDate = new Date().toISOString();\n    //defines variable to update accountBalance with\n    var newBalance = (Number(accountBalance) - Number(amount)).toFixed(2);\n    //defines variable to update id with by incrementing the id of the last object\n    var newId = debitList[debitList.length-1].id + 1;\n\n    //updates states\n    this.setState({\n      debitList : [...debitList, {\n        id:newId,\n        description,\n        amount,\n        date:newDate\n      }],\n      accountBalance:newBalance,\n    }, () => {\n      console.log(this.state); \n      //updates parent component's state\n      this.props.updateDebits(this.state.debitList, this.state.accountBalance);\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  render() {\n    const { debitList, accountBalance } = this.state;\n    return(\n      <div>\n          <h1>Debits</h1>\n          <ul>\n            {debitList.map((debit) =>\n              <li style={{listStyle:'none'}}>{`${debit.description} : ${debit.amount} ${debit.date.slice(0,10)}`} </li>)}\n          </ul>\n          <div>Account balance : {`${accountBalance}`}</div>\n          <form onSubmit={this.handleSubmit}>\n              <input type=\"text\" value={this.state.description} onChange={(e) => {this.handleChange(e, \"description\")}} ref=\"description\" />\n              <input type=\"text\" value={this.state.amount} onChange={(e) => {this.handleChange(e, \"amount\")}} ref=\"amount\" />\n            <button>Add Debit</button>\n          </form>\n          <Link to='/'>Return to Home</Link>\n      </div>\n    )\n  }\n\n}\n\nexport default Debits;"]},"metadata":{},"sourceType":"module"}