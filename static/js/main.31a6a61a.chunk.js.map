{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","console","log","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","creditList","description","amount","newDate","Date","toISOString","newBalance","Number","toFixed","newId","length","id","date","updateCredits","map","credit","style","listStyle","slice","ref","Debits","debitList","updateDebits","debit","initialState","App","logInInfo","newUser","currentUser","updateBalance","creditInfo","balanceInfo","debitInfo","subtract","add","forEach","Promise","all","fetch","then","r1","r2","json","fetchData","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a6a61a.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('submitted');\n    this.props.mockLogIn(this.state.user);  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, { Component } from 'react';\n\n\nclass Credits extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      description: '', //Initializes variables that will be used in creditList\n      amount: '',\n      date:'',\n      creditList:this.props.creditList,\n      accountBalance:this.props.accountBalance //Initializes by using props\n    }\n  }\n\n  //when the input is changed, captures it and updates states\n  handleChange = (e, type) => {\n    this.setState({...this.state, [type]: e.target.value}); \n    console.log(e.target.value);\n  }\n\n  //When submitted, stores data to this state and updates parent component's state\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { creditList, accountBalance, description, amount} = this.state; //initializes states\n\n    //defines variable to update date and converts it from data object to string\n    var newDate = new Date().toISOString(); \n    //defines variable to update accountBalance with\n    var newBalance = (Number(accountBalance) + Number(amount)).toFixed(2);\n    //defines variable to update id with by incrementing the id of the last object\n    var newId = creditList[creditList.length-1].id + 1;\n\n    //updates states\n    this.setState({\n      creditList : [...creditList, {\n        id:newId,\n        description,\n        amount,\n        date: newDate\n      }],\n      accountBalance:newBalance,\n    }, () => {\n      console.log(this.state); \n      //updates parent component's state\n      this.props.updateCredits(this.state.creditList, this.state.accountBalance);\n    });\n  }\n\n  // Render the list of Credit items and a form to input new Credit item\n  render() {\n    const { creditList, accountBalance } = this.state;\n    return (\n        <div>\n          <h1>Credits</h1>\n          <ul>\n            {creditList.map((credit) =>\n              <li style={{listStyle:'none'}}>{`${credit.description} : ${credit.amount} ${credit.date.slice(0,10)}`} </li>)}\n          </ul>\n          <div>Account balance : {`${accountBalance}`}</div>\n          <form onSubmit={this.handleSubmit}>\n              <input type=\"text\" value={this.state.description} onChange={(e) => {this.handleChange(e, \"description\")}} ref=\"description\" />\n              <input type=\"text\" value={this.state.amount} onChange={(e) => {this.handleChange(e, \"amount\")}} ref=\"amount\" />\n            <button>Add Credit</button>\n          </form>\n          <Link to='/'>Return to Home</Link>\n        </div>\n    )\n  }\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, { Component } from 'react';\n\nclass Debits extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      description: '', //Initializes states that will be used in debitList\n      amount : '',\n      date: '',\n      debitList:this.props.debitList,\n      accountBalance:this.props.accountBalance //initializes using props\n    }\n  }\n\n  //when the input is changed, captures it and updates states\n  handleChange = (e, type) => {\n    this.setState({...this.state, [type]: e.target.value}); \n    console.log(e.target.value);\n  }\n\n  //When submitted, stores data to this state and updates parent component's state\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { debitList, accountBalance, description, amount} = this.state;\n\n    //defines variable to update date and converts it from data object to string\n    var newDate = new Date().toISOString();\n    //defines variable to update accountBalance with\n    var newBalance = (Number(accountBalance) - Number(amount)).toFixed(2);\n    //defines variable to update id with by incrementing the id of the last object\n    var newId = debitList[debitList.length-1].id + 1;\n\n    //updates states\n    this.setState({\n      debitList : [...debitList, {\n        id:newId,\n        description,\n        amount,\n        date:newDate\n      }],\n      accountBalance:newBalance,\n    }, () => {\n      console.log(this.state); \n      //updates parent component's state\n      this.props.updateDebits(this.state.debitList, this.state.accountBalance);\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  render() {\n    const { debitList, accountBalance } = this.state;\n    return(\n      <div>\n          <h1>Debits</h1>\n          <ul>\n            {debitList.map((debit) =>\n              <li style={{listStyle:'none'}}>{`${debit.description} : ${debit.amount} ${debit.date.slice(0,10)}`} </li>)}\n          </ul>\n          <div>Account balance : {`${accountBalance}`}</div>\n          <form onSubmit={this.handleSubmit}>\n              <input type=\"text\" value={this.state.description} onChange={(e) => {this.handleChange(e, \"description\")}} ref=\"description\" />\n              <input type=\"text\" value={this.state.amount} onChange={(e) => {this.handleChange(e, \"amount\")}} ref=\"amount\" />\n            <button>Add Debit</button>\n          </form>\n          <Link to='/'>Return to Home</Link>\n      </div>\n    )\n  }\n\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nlet initialState={\n  accountBalance:1234567.89,\n  creditList:[],\n  debitList:[]\n};\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n    this.setState(initialState);\n    this.updateBalance();\n  }\n\n  //updates balance after fetching API data\n  updateBalance(){\n    var subtract = 0;\n    var add = 0;\n    this.state.creditList.forEach((credit) => {\n      subtract = subtract + credit.amount;\n      console.log(subtract);\n    })\n    this.state.debitList.forEach((debit) => {\n      add = add + debit.amount;\n      console.log(add);\n    })\n    this.setState({accountBalance:(subtract - add).toFixed(2)}, () => console.log(this.state.accountBalance));\n  }\n\n  //makes an API request and updates state\n  fetchData(){\n    Promise.all([fetch(\"https://johnnylaicode.github.io/api/credits.json\"),\n    fetch(\"https://johnnylaicode.github.io/api/debits.json\")])\n      .then(([r1, r2]) => {\n        return Promise.all([r1.json(),r2.json()]); //saves as json format\n      })\n      .then(([r1,r2]) => {\n        this.setState({\n          creditList : r1,\n          debitList: r2,\n        }, () => {\n          console.log(this.state.creditList , this.state.debitList);\n          initialState = this.state;\n          this.updateBalance(); //calls for function to update accountBalance with new credit and debit info\n        })\n      })\n  }\n\n  componentDidMount(){\n    console.log(\"fetching\");\n    this.fetchData();\n  }\n\n  //update credit/debit list and account balance from the child components\n  updateCredits = (creditInfo, balanceInfo) => {\n    this.setState({creditList: creditInfo, accountBalance: balanceInfo});\n  }\n\n  updateDebits = (debitInfo, balanceInfo) => {\n    this.setState({debitList: debitInfo, accountBalance: balanceInfo});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} updateCredits={this.updateCredits} updateDebits={this.updateDebits} />)\n    const CreditsComponent = () => (<Credits accountBalance = {this.state.accountBalance} creditList={this.state.creditList} updateCredits={this.updateCredits} />) \n    const DebitsComponent = () => (<Debits accountBalance = {this.state.accountBalance} debitList={this.state.debitList} updateDebits={this.updateDebits} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react/\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}